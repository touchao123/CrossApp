#ifndef __CrossApp_h__
#define __CrossApp_h__

#include "jsapi.h"
#include "jsfriendapi.h"


extern JSClass  *jsb_CAImage_class;
extern JSObject *jsb_CAImage_prototype;

JSBool js_CrossApp_CAImage_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_CrossApp_CAImage_finalize(JSContext *cx, JSObject *obj);
void js_register_CrossApp_CAImage(JSContext *cx, JSObject *global);
void register_all_CrossApp(JSContext* cx, JSObject* obj);
JSBool js_CrossApp_CAImage_getShaderProgram(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImage_initWithETCFile(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImage_stringForFormat(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImage_initWithImage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImage_setShaderProgram(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImage_getMaxS(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImage_getAspectRatio(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImage_releaseData(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImage_hasPremultipliedAlpha(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImage_getPixelsHigh(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImage_setTexParameters(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImage_getPixelsWide(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImage_bitsPerPixelForFormat(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImage_initWithData(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImage_getName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImage_setMaxT(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImage_drawInRect(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImage_getContentSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImage_getMaxT(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImage_getData(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImage_setAliasTexParameters(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImage_setAntiAliasTexParameters(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImage_generateMipmap(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImage_saveToFile(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImage_description(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImage_isMonochrome(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImage_getPixelFormat(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImage_keepData(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImage_getContentSizeInPixels(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImage_copy(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImage_getImageFileType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImage_drawAtPoint(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImage_hasMipmaps(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImage_getDataLenght(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImage_setMaxS(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImage_CC_WHITE_IMAGE(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImage_getFontHeight(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImage_createWithDataNoCache(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImage_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImage_cutStringByWidth(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImage_setDefaultAlphaPixelFormat(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImage_getStringHeight(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImage_createWithData(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImage_getStringWidth(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImage_defaultAlphaPixelFormat(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImage_createWithString(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImage_CAImage(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CAResponder_class;
extern JSObject *jsb_CAResponder_prototype;

JSBool js_CrossApp_CAResponder_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_CrossApp_CAResponder_finalize(JSContext *cx, JSObject *obj);
void js_register_CrossApp_CAResponder(JSContext *cx, JSObject *global);
void register_all_CrossApp(JSContext* cx, JSObject* obj);
JSBool js_CrossApp_CAResponder_isTouchMovedListenHorizontal(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAResponder_isSlidingMinY(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAResponder_isSlidingMinX(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAResponder_resignFirstResponder(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAResponder_isSlidingMaxY(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAResponder_setTouchMovedListenHorizontal(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAResponder_isFirstResponder(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAResponder_isTouchEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAResponder_isTouchMovedStopSubviews(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAResponder_isSlidingMaxX(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAResponder_ccTouchCancelled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAResponder_setHaveNextResponder(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAResponder_becomeFirstResponder(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAResponder_ccTouchEnded(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAResponder_setTouchMovedListenVertical(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAResponder_isTouchMovedListenVertical(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAResponder_ccTouchMoved(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAResponder_setTouchEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAResponder_ccTouchBegan(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAResponder_isHaveNextResponder(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CAView_class;
extern JSObject *jsb_CAView_prototype;

JSBool js_CrossApp_CAView_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_CrossApp_CAView_finalize(JSContext *cx, JSObject *obj);
void js_register_CrossApp_CAView(JSContext *cx, JSObject *global);
void register_all_CrossApp(JSContext* cx, JSObject* obj);
JSBool js_CrossApp_CAView_removeFromSuperview(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_nodeToWorldTransform(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_getShaderProgram(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_getUserObject(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_ccTouchEnded(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_getSuperview(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_sortAllSubviews(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_copy(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_convertToWorldSpaceAR(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_updateDisplayedAlpha(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_isFlipX(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_isFlipY(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_init(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_ccTouchMoved(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_setRotation(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_setZOrder(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_ccTouchBegan(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_setScaleY(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_setScaleX(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_removeSubviewByTag(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_getSubviewByTag(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_setCenter(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_convertRectToWorldSpace(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_onExit(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_setSuperview(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_setRotationX(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_convertToWorldSpace(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_getAlpha(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_setSkewX(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_setSkewY(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_removeSubview(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_onEnterTransitionDidFinish(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_removeAllSubviews(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_convertTouchToNodeSpace(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_reViewlayout(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_getRotationX(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_getRotationY(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_convertRectToNodeSpace(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_setUserObject(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_getUserData(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_getFrame(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_getImageRect(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_getAtlasIndex(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_setBatch(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_nodeToParentTransform(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_nextResponder(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_numberOfRunningActions(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_getFrameOrigin(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_setDirty(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_stopActionByTag(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_setGLServerState(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_isImageRectRotated(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_setColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_getDisplayedColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_getAnchorPoint(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_updateTransform(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_setViewDelegate(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_getAnchorPointInPoints(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_setAnchorPoint(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_onEnter(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_convertToNodeSpaceAR(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_setAtlasIndex(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_visit(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_getCenterOrigin(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_setShaderProgram(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_initWithCenter(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_getRotation(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_setCenterOrigin(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_getZOrder(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_getSubviewsCount(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_runAction(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_transform(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_setVertexZ(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_stopAllActions(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_getSkewX(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_getSkewY(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_getActionByTag(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_setBounds(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_setRotationY(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_insertSubview(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_setAdditionalTransform(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_setFlipY(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_setFlipX(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_getCenter(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_isDirty(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_getViewDelegate(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_getOrderOfArrival(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_setActionManager(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_isRunning(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_setBlendFunc(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_getQuad(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_updateDisplayedColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_setVisible(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_reorderSubview(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_getVertexZ(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView__setZOrder(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_setScale(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_isDisplayRange(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_isFrame(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_getDisplayedAlpha(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_setOrderOfArrival(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_getImageAtlas(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_ccTouchCancelled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_setFrameOrigin(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_getScaleY(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_getScaleX(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_addSubview(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_setAnchorPointInPoints(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_initWithFrame(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_setDisplayRange(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_setAlpha(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_getSubviews(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_draw(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_getBlendFunc(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_transformAncestors(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_description(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_convertTouchToNodeSpaceAR(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_isVisible(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_update(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_convertToNodeSpace(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_onExitTransitionDidStart(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_getBounds(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_getScale(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_worldToNodeTransform(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_setImageAtlas(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_setUserData(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_initWithColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_setFrame(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_parentToNodeTransform(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_getCamera(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_getBatch(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_getColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_getGLServerState(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_stopAction(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_getActionManager(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_createWithFrame(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_createWithColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_createWithCenter(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAView_CAView(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CALabel_class;
extern JSObject *jsb_CALabel_prototype;

JSBool js_CrossApp_CALabel_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_CrossApp_CALabel_finalize(JSContext *cx, JSObject *obj);
void js_register_CrossApp_CALabel(JSContext *cx, JSObject *global);
void register_all_CrossApp(JSContext* cx, JSObject* obj);
JSBool js_CrossApp_CALabel_setTextAlignment(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CALabel_setDimensions(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CALabel_getFontSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CALabel_getItalics(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CALabel_sizeToFit(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CALabel_getBold(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CALabel_getText(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CALabel_initWithCenter(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CALabel_setUnderLine(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CALabel_setFontName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CALabel_setLineSpacing(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CALabel_setBold(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CALabel_visit(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CALabel_getLabelSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CALabel_setWordWrap(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CALabel_getFontName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CALabel_getLineSpacing(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CALabel_setVerticalTextAlignmet(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CALabel_getUnderLine(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CALabel_getVerticalTextAlignmet(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CALabel_initWithFrame(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CALabel_setItalics(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CALabel_getDimensions(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CALabel_getNumberOfLine(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CALabel_setFontSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CALabel_unsizeToFit(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CALabel_setText(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CALabel_getWordWrap(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CALabel_getTextAlignment(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CALabel_applyStyle(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CALabel_setNumberOfLine(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CALabel_onEnterTransitionDidFinish(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CALabel_createWithFrame(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CALabel_createWithCenter(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CALabel_CALabel(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CAApplication_class;
extern JSObject *jsb_CAApplication_prototype;

JSBool js_CrossApp_CAApplication_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_CrossApp_CAApplication_finalize(JSContext *cx, JSObject *obj);
void js_register_CrossApp_CAApplication(JSContext *cx, JSObject *global);
void register_all_CrossApp(JSContext* cx, JSObject* obj);
JSBool js_CrossApp_CAApplication_setDelegate(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAApplication_setContentScaleFactor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAApplication_getContentScaleFactor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAApplication_getWinSizeInPixels(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAApplication_getDeltaTime(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAApplication_setGLDefaultValues(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAApplication_setActionManager(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAApplication_setAlphaBlending(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAApplication_updateDraw(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAApplication_getKeypadDispatcher(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAApplication_getNotificationNode(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAApplication_getWinSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAApplication_end(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAApplication_runWindow(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAApplication_isSendCleanupToScene(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAApplication_getVisibleOrigin(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAApplication_mainLoop(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAApplication_setDepthTest(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAApplication_getSecondsPerFrame(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAApplication_convertToUI(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAApplication_setAccelerometer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAApplication_setDefaultValues(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAApplication_init(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAApplication_reshapeProjection(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAApplication_startAnimation(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAApplication_getAdaptationRatio(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAApplication_setViewport(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAApplication_stopAnimation(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAApplication_setKeypadDispatcher(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAApplication_run(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAApplication_resume(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAApplication_setTouchDispatcher(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAApplication_isNextDeltaTimeZero(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAApplication_getDelegate(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAApplication_setOpenGLView(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAApplication_convertToGL(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAApplication_purgeCachedData(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAApplication_getTotalFrames(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAApplication_pause(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAApplication_setNotificationNode(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAApplication_drawScene(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAApplication_isDisplayStats(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAApplication_setProjection(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAApplication_getTouchDispatcher(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAApplication_getZEye(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAApplication_setNextDeltaTimeZero(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAApplication_getVisibleSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAApplication_getRootWindow(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAApplication_getAnimationInterval(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAApplication_isPaused(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAApplication_setDisplayStats(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAApplication_setAnimationInterval(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAApplication_getActionManager(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAApplication_getApplication(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CCTimer_class;
extern JSObject *jsb_CCTimer_prototype;

JSBool js_CrossApp_CCTimer_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_CrossApp_CCTimer_finalize(JSContext *cx, JSObject *obj);
void js_register_CrossApp_CCTimer(JSContext *cx, JSObject *global);
void register_all_CrossApp(JSContext* cx, JSObject* obj);
JSBool js_CrossApp_CCTimer_getInterval(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CCTimer_setInterval(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CCTimer_initWithScriptHandler(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CCTimer_update(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CCTimer_getScriptHandler(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CCTimer_timerWithScriptHandler(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CCTimer_CCTimer(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CAScheduler_class;
extern JSObject *jsb_CAScheduler_prototype;

JSBool js_CrossApp_CAScheduler_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_CrossApp_CAScheduler_finalize(JSContext *cx, JSObject *obj);
void js_register_CrossApp_CAScheduler(JSContext *cx, JSObject *global);
void register_all_CrossApp(JSContext* cx, JSObject* obj);
JSBool js_CrossApp_CAScheduler_getScheduler(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CAControl_class;
extern JSObject *jsb_CAControl_prototype;

JSBool js_CrossApp_CAControl_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_CrossApp_CAControl_finalize(JSContext *cx, JSObject *obj);
void js_register_CrossApp_CAControl(JSContext *cx, JSObject *global);
void register_all_CrossApp(JSContext* cx, JSObject* obj);
JSBool js_CrossApp_CAControl_setControlStateSelected(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAControl_setControlStateHighlighted(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAControl_getControlState(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAControl_setControlStateNormal(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAControl_setControlState(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAControl_setControlStateLocked(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAControl_init(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAControl_getControlStateLocked(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAControl_setControlStateDisabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAControl_CAControl(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CAButton_class;
extern JSObject *jsb_CAButton_prototype;

JSBool js_CrossApp_CAButton_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_CrossApp_CAButton_finalize(JSContext *cx, JSObject *obj);
void js_register_CrossApp_CAButton(JSContext *cx, JSObject *global);
void register_all_CrossApp(JSContext* cx, JSObject* obj);
JSBool js_CrossApp_CAButton_getBackGroundViewForState(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAButton_setBackGroundViewForState(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAButton_ccTouchBegan(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAButton_ccTouchEnded(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAButton_setTitleForState(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAButton_isAllowsSelected(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAButton_isTouchClick(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAButton_isSelected(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAButton_init(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAButton_setImageColorForState(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAButton_ccTouchMoved(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAButton_isCloseTapSound(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAButton_setTitleFontName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAButton_onExitTransitionDidStart(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAButton_setTitleColorForState(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAButton_setCloseTapSound(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAButton_interruptTouchState(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAButton_setControlState(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAButton_setImageForState(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAButton_ccTouchCancelled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAButton_setAllowsSelected(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAButton_onEnterTransitionDidFinish(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAButton_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAButton_createWithFrame(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAButton_createWithCenter(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CABarItem_class;
extern JSObject *jsb_CABarItem_prototype;

JSBool js_CrossApp_CABarItem_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_CrossApp_CABarItem_finalize(JSContext *cx, JSObject *obj);
void js_register_CrossApp_CABarItem(JSContext *cx, JSObject *global);
void register_all_CrossApp(JSContext* cx, JSObject* obj);
JSBool js_CrossApp_CABarItem_setTouchEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CABarItem_setImage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CABarItem_setTitle(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CABarItem_isTouchEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CABarItem_getTitle(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CABarItem_getImage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CABarItem_CABarItem(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CATabBarItem_class;
extern JSObject *jsb_CATabBarItem_prototype;

JSBool js_CrossApp_CATabBarItem_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_CrossApp_CATabBarItem_finalize(JSContext *cx, JSObject *obj);
void js_register_CrossApp_CATabBarItem(JSContext *cx, JSObject *global);
void register_all_CrossApp(JSContext* cx, JSObject* obj);
JSBool js_CrossApp_CATabBarItem_init(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATabBarItem_setSelectedImage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATabBarItem_getSelectedImage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATabBarItem_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATabBarItem_CATabBarItem(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CAImageView_class;
extern JSObject *jsb_CAImageView_prototype;

JSBool js_CrossApp_CAImageView_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_CrossApp_CAImageView_finalize(JSContext *cx, JSObject *obj);
void js_register_CrossApp_CAImageView(JSContext *cx, JSObject *global);
void register_all_CrossApp(JSContext* cx, JSObject* obj);
JSBool js_CrossApp_CAImageView_copy(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImageView_setImage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImageView_initWithImage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImageView_setImageAsyncWithFile(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImageView_getImageViewScaleType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImageView_init(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImageView_setImageViewScaleType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImageView_getImage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImageView_createWithFrame(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImageView_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImageView_createWithImage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImageView_createWithCenter(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAImageView_CAImageView(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CAScale9ImageView_class;
extern JSObject *jsb_CAScale9ImageView_prototype;

JSBool js_CrossApp_CAScale9ImageView_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_CrossApp_CAScale9ImageView_finalize(JSContext *cx, JSObject *obj);
void js_register_CrossApp_CAScale9ImageView(JSContext *cx, JSObject *global);
void register_all_CrossApp(JSContext* cx, JSObject* obj);
JSBool js_CrossApp_CAScale9ImageView_setInsetBottom(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScale9ImageView_getOriginalSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScale9ImageView_draw(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScale9ImageView_getImage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScale9ImageView_setColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScale9ImageView_setImage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScale9ImageView_updateDisplayedAlpha(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScale9ImageView_initWithImage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScale9ImageView_getInsetTop(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScale9ImageView_setInsetLeft(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScale9ImageView_setCapInsets(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScale9ImageView_getCapInsets(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScale9ImageView_setInsetTop(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScale9ImageView_init(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScale9ImageView_getInsetBottom(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScale9ImageView_getColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScale9ImageView_getInsetLeft(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScale9ImageView_setInsetRight(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScale9ImageView_copy(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScale9ImageView_getInsetRight(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScale9ImageView_createWithFrame(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScale9ImageView_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScale9ImageView_createWithCenter(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScale9ImageView_CAScale9ImageView(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CAProgress_class;
extern JSObject *jsb_CAProgress_prototype;

JSBool js_CrossApp_CAProgress_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_CrossApp_CAProgress_finalize(JSContext *cx, JSObject *obj);
void js_register_CrossApp_CAProgress(JSContext *cx, JSObject *global);
void register_all_CrossApp(JSContext* cx, JSObject* obj);
JSBool js_CrossApp_CAProgress_setProgressTintImage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAProgress_getProgressTintImage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAProgress_setProgresstrackColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAProgress_getProgresstrackColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAProgress_getProgressStyle(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAProgress_getProgressTintColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAProgress_getProgressTrackImage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAProgress_setProgressTrackImage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAProgress_init(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAProgress_onExitTransitionDidStart(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAProgress_getProgress(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAProgress_setProgress(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAProgress_setProgressStyle(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAProgress_onEnterTransitionDidFinish(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAProgress_setProgressTintColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAProgress_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAProgress_CAProgress(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CASwitch_class;
extern JSObject *jsb_CASwitch_prototype;

JSBool js_CrossApp_CASwitch_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_CrossApp_CASwitch_finalize(JSContext *cx, JSObject *obj);
void js_register_CrossApp_CASwitch(JSContext *cx, JSObject *global);
void register_all_CrossApp(JSContext* cx, JSObject* obj);
JSBool js_CrossApp_CASwitch_getOnImage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CASwitch_setOffImage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CASwitch_isTouchClick(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CASwitch_initWithFrame(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CASwitch_getThumbTintImage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CASwitch_setIsOn(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CASwitch_initWithCenter(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CASwitch_setOnImage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CASwitch_onExitTransitionDidStart(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CASwitch_getOffImage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CASwitch_isOn(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CASwitch_onEnterTransitionDidFinish(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CASwitch_setThumbTintImage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CASwitch_createWithFrame(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CASwitch_createWithCenter(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CASwitch_CASwitch(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CASlider_class;
extern JSObject *jsb_CASlider_prototype;

JSBool js_CrossApp_CASlider_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_CrossApp_CASlider_finalize(JSContext *cx, JSObject *obj);
void js_register_CrossApp_CASlider(JSContext *cx, JSObject *global);
void register_all_CrossApp(JSContext* cx, JSObject* obj);
JSBool js_CrossApp_CASlider_ccTouchBegan(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CASlider_initWithCenter(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CASlider_ccTouchEnded(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CASlider_getTrackHeight(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CASlider_setMinValue(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CASlider_getMinValue(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CASlider_ccTouchMoved(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CASlider_getMaxValue(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CASlider_setMaxTrackTintImage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CASlider_setValue(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CASlider_isTouchClick(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CASlider_initWithFrame(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CASlider_getMaxTrackTintImage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CASlider_setThumbTintImage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CASlider_getMinTrackTintImage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CASlider_setTrackHeight(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CASlider_getThumbTintImage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CASlider_setMaxValue(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CASlider_getValue(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CASlider_onExitTransitionDidStart(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CASlider_setMinTrackTintImage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CASlider_onEnterTransitionDidFinish(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CASlider_createWithFrame(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CASlider_createWithCenter(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CASlider_CASlider(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CATextField_class;
extern JSObject *jsb_CATextField_prototype;

JSBool js_CrossApp_CATextField_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_CrossApp_CATextField_finalize(JSContext *cx, JSObject *obj);
void js_register_CrossApp_CATextField(JSContext *cx, JSObject *global);
void register_all_CrossApp(JSContext* cx, JSObject* obj);
JSBool js_CrossApp_CATextField_updateImageRect(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATextField_getFontSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATextField_getKeyboardReturnType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATextField_setKeyboardType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATextField_getText(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATextField_getTextColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATextField_setImageRect(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATextField_getVertMargins(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATextField_getPlaceHolder(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATextField_setKeyboardReturnType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATextField_setSpaceHolderColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATextField_getKeyboardType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATextField_analyzeString(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATextField_init(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATextField_setInputType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATextField_setBackgroundView(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATextField_getCharCount(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATextField_getInputType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATextField_setHoriMargins(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATextField_setVertMargins(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATextField_getBackgroundView(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATextField_onExitTransitionDidStart(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATextField_setFontSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATextField_setPlaceHolder(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATextField_setTextColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATextField_getCursorColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATextField_resignFirstResponder(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATextField_setText(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATextField_becomeFirstResponder(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATextField_getSpaceHolderColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATextField_setCursorColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATextField_getHoriMargins(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATextField_onEnterTransitionDidFinish(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATextField_createWithFrame(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATextField_createWithCenter(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATextField_CATextField(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CAStepper_class;
extern JSObject *jsb_CAStepper_prototype;

JSBool js_CrossApp_CAStepper_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_CrossApp_CAStepper_finalize(JSContext *cx, JSObject *obj);
void js_register_CrossApp_CAStepper(JSContext *cx, JSObject *global);
void register_all_CrossApp(JSContext* cx, JSObject* obj);
JSBool js_CrossApp_CAStepper_getDividerImageForState(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAStepper_setMinValue(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAStepper_getBackgroundImageForState(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAStepper_initWithCenter(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAStepper_setValue(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAStepper_getContinuous(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAStepper_getAutoRepeat(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAStepper_setContinuous(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAStepper_getMinValue(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAStepper_init(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAStepper_getIncrementImageForState(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAStepper_getDecrementImageForState(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAStepper_getMaxValue(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAStepper_setDecrementImage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAStepper_getWraps(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAStepper_setStepValue(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAStepper_initWithFrame(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAStepper_setBackgroundImage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAStepper_setAutoRepeat(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAStepper_setDividerImage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAStepper_setTouchEffect(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAStepper_setWraps(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAStepper_setIncrementImage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAStepper_getStepValue(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAStepper_setMaxValue(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAStepper_getValue(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAStepper_visit(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAStepper_getTouchEffect(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAStepper_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAStepper_createWithFrame(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAStepper_createWithCenter(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAStepper_CAStepper(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CAScrollView_class;
extern JSObject *jsb_CAScrollView_prototype;

JSBool js_CrossApp_CAScrollView_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_CrossApp_CAScrollView_finalize(JSContext *cx, JSObject *obj);
void js_register_CrossApp_CAScrollView(JSContext *cx, JSObject *global);
void register_all_CrossApp(JSContext* cx, JSObject* obj);
JSBool js_CrossApp_CAScrollView_setBounceVertical(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_removeAllSubviews(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_isTracking(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_startDeaccelerateScroll(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_isBounceVertical(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_setShowsVerticalScrollIndicator(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_setShowsHorizontalScrollIndicator(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_setTouchEnabledAtSubviews(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_isScrollEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_getZoomScale(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_isDecelerating(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_endFooterRefresh(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_setBackGroundImage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_ccTouchEnded(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_setBackGroundColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_addSubview(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_isBounceHorizontal(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_setContentOffset(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_setFooterRefreshView(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_init(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_isShowsVerticalScrollIndicator(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_getSubviews(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_ccTouchMoved(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_setHeaderRefreshView(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_ccTouchBegan(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_setScrollEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_setBounces(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_getContentOffset(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_insertSubview(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_removeSubviewByTag(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_getSubviewByTag(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_isBounces(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_setViewSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_getMaximumZoomScale(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_isSlidingMaxX(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_getViewSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_setMaximumZoomScale(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_onExitTransitionDidStart(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_isZooming(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_isShowsHorizontalScrollIndicator(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_getHeaderRefreshView(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_isSlidingMaxY(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_getFooterRefreshView(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_isSlidingMinY(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_stopDeaccelerateScroll(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_removeSubview(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_isSlidingMinX(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_ccTouchCancelled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_isTouchEnabledAtSubviews(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_setMinimumZoomScale(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_endHeaderRefresh(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_getMinimumZoomScale(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_setBounceHorizontal(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_setZoomScale(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_onEnterTransitionDidFinish(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_createWithFrame(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_createWithCenter(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAScrollView_CAScrollView(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CAPageView_class;
extern JSObject *jsb_CAPageView_prototype;

JSBool js_CrossApp_CAPageView_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_CrossApp_CAPageView_finalize(JSContext *cx, JSObject *obj);
void js_register_CrossApp_CAPageView(JSContext *cx, JSObject *global);
void register_all_CrossApp(JSContext* cx, JSObject* obj);
JSBool js_CrossApp_CAPageView_setPageViewDelegate(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAPageView_getPageViewDirection(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAPageView_setCurrPage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAPageView_getCurrPage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAPageView_init(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAPageView_getPageViewDelegate(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAPageView_getPageCount(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAPageView_getSubViewAtIndex(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAPageView_createWithFrame(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAPageView_createWithCenter(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CAViewController_class;
extern JSObject *jsb_CAViewController_prototype;

JSBool js_CrossApp_CAViewController_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_CrossApp_CAViewController_finalize(JSContext *cx, JSObject *obj);
void js_register_CrossApp_CAViewController(JSContext *cx, JSObject *global);
void register_all_CrossApp(JSContext* cx, JSObject* obj);
JSBool js_CrossApp_CAViewController_getView(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAViewController_presentModalViewController(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAViewController_nextResponder(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAViewController_getTabBarItem(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAViewController_ccTouchCancelled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAViewController_ccTouchEnded(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAViewController_setTabBarItem(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAViewController_isKeypadEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAViewController_setTitle(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAViewController_isViewRunning(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAViewController_getNavigationController(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAViewController_getTabBarController(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAViewController_getNibName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAViewController_ccTouchMoved(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAViewController_init(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAViewController_getNavigationBarItem(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAViewController_getTitle(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAViewController_setNavigationBarItem(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAViewController_ccTouchBegan(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAViewController_setKeypadEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAViewController_dismissModalViewController(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CANavigationController_class;
extern JSObject *jsb_CANavigationController_prototype;

JSBool js_CrossApp_CANavigationController_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_CrossApp_CANavigationController_finalize(JSContext *cx, JSObject *obj);
void js_register_CrossApp_CANavigationController(JSContext *cx, JSObject *global);
void register_all_CrossApp(JSContext* cx, JSObject* obj);
JSBool js_CrossApp_CANavigationController_pushViewController(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CANavigationController_updateItem(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CANavigationController_ccTouchCancelled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CANavigationController_setTouchMoved(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CANavigationController_setNavigationBarHidden(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CANavigationController_getBackViewController(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CANavigationController_isNavigationBarHidden(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CANavigationController_getNavigationBar(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CANavigationController_initWithRootViewController(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CANavigationController_getViewControllerAtIndex(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CANavigationController_ccTouchEnded(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CANavigationController_popViewControllerAnimated(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CANavigationController_isTouchMoved(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CANavigationController_ccTouchMoved(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CANavigationController_replaceViewController(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CANavigationController_getNavigationBarVerticalAlignment(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CANavigationController_ccTouchBegan(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CANavigationController_getViewControllerCount(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CANavigationController_CANavigationController(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CATabBarController_class;
extern JSObject *jsb_CATabBarController_prototype;

JSBool js_CrossApp_CATabBarController_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_CrossApp_CATabBarController_finalize(JSContext *cx, JSObject *obj);
void js_register_CrossApp_CATabBarController(JSContext *cx, JSObject *global);
void register_all_CrossApp(JSContext* cx, JSObject* obj);
JSBool js_CrossApp_CATabBarController_setTabBarHidden(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATabBarController_updateItem(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATabBarController_showSelectedViewController(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATabBarController_getSelectedViewController(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATabBarController_isTabBarHidden(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATabBarController_getViewControllerAtIndex(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATabBarController_getSelectedViewControllerAtIndex(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATabBarController_getTabBar(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATabBarController_isScrollEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATabBarController_getTabBarVerticalAlignment(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATabBarController_setScrollEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATabBarController_showSelectedViewControllerAtIndex(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATabBarController_CATabBarController(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CADrawerController_class;
extern JSObject *jsb_CADrawerController_prototype;

JSBool js_CrossApp_CADrawerController_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_CrossApp_CADrawerController_finalize(JSContext *cx, JSObject *obj);
void js_register_CrossApp_CADrawerController(JSContext *cx, JSObject *global);
void register_all_CrossApp(JSContext* cx, JSObject* obj);
JSBool js_CrossApp_CADrawerController_hideLeftViewController(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CADrawerController_showLeftViewController(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CADrawerController_ccTouchEnded(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CADrawerController_ccTouchBegan(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CADrawerController_setTouchMoved(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CADrawerController_getRightViewController(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CADrawerController_ccTouchCancelled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CADrawerController_ccTouchMoved(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CADrawerController_getBackgroundView(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CADrawerController_isShowLeftViewController(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CADrawerController_isTouchMoved(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CADrawerController_initWithController(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CADrawerController_replaceRightViewController(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CADrawerController_getLeftViewController(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CADrawerController_setBackgroundView(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CADrawerController_CADrawerController(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CAWindow_class;
extern JSObject *jsb_CAWindow_prototype;

JSBool js_CrossApp_CAWindow_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_CrossApp_CAWindow_finalize(JSContext *cx, JSObject *obj);
void js_register_CrossApp_CAWindow(JSContext *cx, JSObject *global);
void register_all_CrossApp(JSContext* cx, JSObject* obj);
JSBool js_CrossApp_CAWindow_presentModalViewController(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAWindow_setRootViewController(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAWindow_getRootViewController(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAWindow_init(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAWindow_dismissModalViewController(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAWindow_getModalViewController(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAWindow_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAWindow_CAWindow(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CAListView_class;
extern JSObject *jsb_CAListView_prototype;

JSBool js_CrossApp_CAListView_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_CrossApp_CAListView_finalize(JSContext *cx, JSObject *obj);
void js_register_CrossApp_CAListView(JSContext *cx, JSObject *global);
void register_all_CrossApp(JSContext* cx, JSObject* obj);
JSBool js_CrossApp_CAListView_isAllowsSelection(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAListView_ccTouchBegan(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAListView_setListFooterHeight(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAListView_ccTouchEnded(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAListView_setSeparatorColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAListView_setSelectAtIndex(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAListView_setListViewOrientation(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAListView_getSeparatorViewHeight(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAListView_init(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAListView_setAllowsHeadAndFootHover(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAListView_getSeparatorColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAListView_ccTouchMoved(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAListView_setAllowsSelection(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAListView_reloadData(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAListView_setAllowsMultipleSelection(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAListView_isAllowsMultipleSelection(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAListView_setListHeaderView(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAListView_getAllowsHeadAndFootHover(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAListView_getListFooterHeight(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAListView_getListHeaderHeight(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAListView_setListHeaderHeight(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAListView_onExitTransitionDidStart(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAListView_getListHeaderView(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAListView_setSeparatorViewHeight(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAListView_reloadViewSizeData(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAListView_getListViewOrientation(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAListView_setListFooterView(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAListView_getListFooterView(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAListView_ccTouchCancelled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAListView_setUnSelectAtIndex(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAListView_dequeueReusableCellWithIdentifier(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAListView_onEnterTransitionDidFinish(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAListView_createWithFrame(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAListView_createWithCenter(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAListView_CAListView(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CAListViewCell_class;
extern JSObject *jsb_CAListViewCell_prototype;

JSBool js_CrossApp_CAListViewCell_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_CrossApp_CAListViewCell_finalize(JSContext *cx, JSObject *obj);
void js_register_CrossApp_CAListViewCell(JSContext *cx, JSObject *global);
void register_all_CrossApp(JSContext* cx, JSObject* obj);
JSBool js_CrossApp_CAListViewCell_getIndex(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAListViewCell_setReuseIdentifier(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAListViewCell_isAllowsSelected(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAListViewCell_getReuseIdentifier(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAListViewCell_setAllowsSelected(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAListViewCell_setControlStateEffect(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAListViewCell_getBackgroundView(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAListViewCell_isControlStateEffect(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAListViewCell_initWithReuseIdentifier(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAListViewCell_setBackgroundView(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAListViewCell_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAListViewCell_CAListViewCell(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CATableView_class;
extern JSObject *jsb_CATableView_prototype;

JSBool js_CrossApp_CATableView_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_CrossApp_CATableView_finalize(JSContext *cx, JSObject *obj);
void js_register_CrossApp_CATableView(JSContext *cx, JSObject *global);
void register_all_CrossApp(JSContext* cx, JSObject* obj);
JSBool js_CrossApp_CATableView_getTableFooterView(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableView_isAllowsSelection(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableView_ccTouchBegan(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableView_ccTouchEnded(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableView_setSeparatorColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableView_setTableFooterHeight(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableView_setTableHeaderHeight(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableView_setAlwaysTopSectionHeader(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableView_isAlwaysBottomSectionFooter(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableView_getRowHeightInSectionInRow(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableView_setTableHeaderView(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableView_getNumberOfSections(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableView_getSeparatorViewHeight(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableView_init(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableView_setSelectRowAtIndexPath(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableView_getTableViewDataSource(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableView_getSectionHeightInSection(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableView_isAllowsMultipleSelection(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableView_getSeparatorColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableView_ccTouchMoved(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableView_setAllowsSelection(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableView_reloadData(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableView_setAllowsMultipleSelection(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableView_getTableFooterHeight(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableView_cellForRowAtIndexPath(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableView_getTableHeaderView(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableView_setAlwaysBottomSectionFooter(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableView_onExitTransitionDidStart(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableView_isAlwaysTopSectionHeader(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableView_setTableFooterView(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableView_setSeparatorViewHeight(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableView_setTableViewDelegate(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableView_setTableViewDataSource(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableView_ccTouchCancelled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableView_getNumberOfRowsInSection(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableView_setUnSelectRowAtIndexPath(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableView_onEnterTransitionDidFinish(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableView_getSectionHeaderHeightInSection(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableView_getSectionFooterHeightInSection(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableView_dequeueReusableCellWithIdentifier(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableView_getTableViewDelegate(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableView_getTableHeaderHeight(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableView_createWithFrame(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableView_createWithCenter(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableView_CATableView(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CATableViewCell_class;
extern JSObject *jsb_CATableViewCell_prototype;

JSBool js_CrossApp_CATableViewCell_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_CrossApp_CATableViewCell_finalize(JSContext *cx, JSObject *obj);
void js_register_CrossApp_CATableViewCell(JSContext *cx, JSObject *global);
void register_all_CrossApp(JSContext* cx, JSObject* obj);
JSBool js_CrossApp_CATableViewCell_setReuseIdentifier(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableViewCell_isAllowsSelected(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableViewCell_getReuseIdentifier(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableViewCell_setAllowsSelected(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableViewCell_setControlStateEffect(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableViewCell_getRow(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableViewCell_getBackgroundView(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableViewCell_getSection(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableViewCell_isControlStateEffect(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableViewCell_initWithReuseIdentifier(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableViewCell_setBackgroundView(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableViewCell_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CATableViewCell_CATableViewCell(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CAPickerView_class;
extern JSObject *jsb_CAPickerView_prototype;

JSBool js_CrossApp_CAPickerView_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_CrossApp_CAPickerView_finalize(JSContext *cx, JSObject *obj);
void js_register_CrossApp_CAPickerView(JSContext *cx, JSObject *global);
void register_all_CrossApp(JSContext* cx, JSObject* obj);
JSBool js_CrossApp_CAPickerView_onEnter(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAPickerView_setFontSizeNormal(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAPickerView_initWithCenter(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAPickerView_getFontSizeNormal(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAPickerView_reloadAllComponents(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAPickerView_getFontSizeSelected(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAPickerView_visit(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAPickerView_init(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAPickerView_getFontColorSelected(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAPickerView_initWithFrame(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAPickerView_setFontSizeSelected(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAPickerView_getFontColorNormal(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAPickerView_setFontColorNormal(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAPickerView_numberOfRowsInComponent(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAPickerView_getSeparateColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAPickerView_selectRow(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAPickerView_reloadComponent(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAPickerView_numberOfComponents(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAPickerView_onExit(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAPickerView_setFontColorSelected(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAPickerView_rowSizeForComponent(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAPickerView_selectedRowInComponent(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAPickerView_setSeparateColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAPickerView_viewForRow(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAPickerView_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAPickerView_createWithFrame(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAPickerView_createWithCenter(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CAPickerView_CAPickerView(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_JSViewController_class;
extern JSObject *jsb_JSViewController_prototype;

JSBool js_CrossApp_JSViewController_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_CrossApp_JSViewController_finalize(JSContext *cx, JSObject *obj);
void js_register_CrossApp_JSViewController(JSContext *cx, JSObject *global);
void register_all_CrossApp(JSContext* cx, JSObject* obj);
JSBool js_CrossApp_JSViewController_viewDidUnload(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_JSViewController_viewDidLoad(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_JSViewController_JSViewController(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CCApplication_class;
extern JSObject *jsb_CCApplication_prototype;

JSBool js_CrossApp_CCApplication_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_CrossApp_CCApplication_finalize(JSContext *cx, JSObject *obj);
void js_register_CrossApp_CCApplication(JSContext *cx, JSObject *global);
void register_all_CrossApp(JSContext* cx, JSObject* obj);
JSBool js_CrossApp_CCApplication_getTargetPlatform(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CCApplication_setAnimationInterval(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CCApplication_getCurrentLanguage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_CrossApp_CCApplication_sharedApplication(JSContext *cx, uint32_t argc, jsval *vp);
#endif

